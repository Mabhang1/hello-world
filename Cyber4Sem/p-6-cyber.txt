Aim:Write a program to implement the MD5 algorithm compute the message digest.

Theory:
MD5 (Message Digest Algorithm 5) is a widely used cryptographic hash function that produces a 128-bit (16-byte) hash value, typically expressed as a 32-character hexadecimal number. It takes an input message of any length and produces a fixed-size output hash. Here's a brief explanation of how MD5 works:

1. **Message Padding**: The input message is padded to a multiple of 512 bits (64 bytes) to ensure it's a multiple of the block size used in MD5.

2. **Initialization**: MD5 uses four 32-bit registers (A, B, C, D) and 64 constant values derived from the sine function.

3. **Processing Blocks**: The message is processed in 512-bit (64-byte) blocks. Each block is divided into 16 32-bit words.

4. **Four Rounds**: Each block goes through four rounds of processing, consisting of 16 operations each.

5. **Operations**: MD5 primarily uses bitwise logical functions (AND, OR, XOR) and modular addition to manipulate the data in each round. These operations shuffle the bits and mix the input data in a non-linear fashion.

6. **Updating the State**: After processing each block, the MD5 hash state (the values in registers A, B, C, D) is updated based on the processed block.

7. **Output**: After processing all blocks, the final hash value is obtained by concatenating the values in the four registers (A, B, C, D) in hexadecimal format.

MD5 is vulnerable to collision attacks, where two different messages produce the same hash value, and it's no longer recommended for cryptographic purposes due to its vulnerabilities. However, it's still used in non-security contexts like checksums and checksum verification.


Source Code:
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

// Java program to calculate MD5 hash value
public class MD5 {
	public static String getMd5(String input)
	{
		try {

			// Static getInstance method is called with hashing MD5
			MessageDigest md = MessageDigest.getInstance("MD5");

			// digest() method is called to calculate message digest
			// of an input digest() return array of byte
			byte[] messageDigest = md.digest(input.getBytes());

			// Convert byte array into signum representation
			BigInteger no = new BigInteger(1, messageDigest);

			// Convert message digest into hex value
			String hashtext = no.toString(16);
			while (hashtext.length() < 32) {
				hashtext = "0" + hashtext;
			}
			return hashtext;
		}

		// For specifying wrong message digest algorithms
		catch (NoSuchAlgorithmException e) {
			throw new RuntimeException(e);
		}
	}

	// Driver code
	public static void main(String args[]) throws NoSuchAlgorithmException
	{
		String s = "GeeksForGeeks";
		System.out.println("4701 - Abhang Mane");
		System.out.println("****MD5 Hash****");
		System.out.println("String: " + s);
		System.out.println("Your HashCode Generated by MD5 is: " + getMd5(s));
	}
}





Output:

Conclusion:Hence MD5 hash was implemented on String “GeeksForGeeks” successfully.





































